apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: sol1-
spec:
  entrypoint: parallel-dag
  arguments:
    parameters:
    - name: rounds
      value: "02" 
    - name: initial-round
      value: "00"
    - name: job-prefix
      value: "sol1"
    - name: split_csv
      value: "cc359ppmi128/CC359PPMI128_sol1-test.csv"
  templates:
  - name: parallel-dag
    dag:
      tasks:
      # Round 0
      - name: train-sol1-00
        template: train-job
        arguments:
          parameters:
          - name: script-name
            value: "run_train1.sh"
          - name: round
            value: "{{workflow.parameters.initial-round}}"
          - name: epochs
            value: "001"
          - name: epoch
            value: "000"
          - name: inst-id
            value: "{{item.inst}}"
          - name: model_pth
            value: "None"
        withItems:
        - { inst: "1" }
        # - { inst: "2" }
        # - { inst: "3" }
        # - { inst: "4" }
        # - { inst: "5" }
        # - { inst: "6" }

      - name: agg-sol1-00
        template: aggregation-job
        arguments:
          parameters:
          - name: script-name
            value: "run_aggregation.sh"
          - name: round
            value: "{{workflow.parameters.initial-round}}"
          - name: epochs
            value: "001"
          - name: epoch
            value: "000"
          - name: inst-id
            value: "0"
          - name: model_pth
            value: "None"
          - name: algorithm
            value: "fedavg"
        dependencies: [train-sol1-00]

      - name: infer-sol1--00
        template: infer-job
        arguments:
          parameters:
          - name: script-name
            value: "run_forward1.sh"
          - name: job-name
            value: "{{item.job-name}}"
          - name: rounds
            value: "{{item.rounds}}"
          - name: round
            value: "{{item.round}}"
          - name: epoch
            value: "{{item.epoch}}"
          - name: inst-id
            value: "{{item.inst}}"
          - name: split_csv
            value: "{{item.split_csv}}"
          - name: model_pth
            value: "{{item.model_pth}}"
        withItems:
        - { job-name: "sol1_test_0", rounds: "02", round: "01", epoch: "001", inst: "0", split_csv: "cc359ppmi128/CC359PPMI128_sol1-test.csv", model_pth: "/fedpod/states/sol1_0/R02r01/models/R02r01_agg.pth" }
        dependencies: [agg-sol1-00]

      # Round 1
      - name: train-sol1-01
        template: train-job
        arguments:
          parameters:
          - name: script-name
            value: "run_train1.sh"
          - name: round
            value: "{{tasks.agg-sol1-00.outputs.parameters.next-round}}"
          - name: epochs
            value: "019"
          - name: epoch
            value: "{{tasks.agg-sol1-00.outputs.parameters.next-epoch}}"
          - name: inst-id
            value: "{{item.inst}}"
          - name: model_pth
            value: "/fedpod/states/{{workflow.parameters.job-prefix}}_0/R{{workflow.parameters.rounds}}r{{tasks.agg-sol1-00.outputs.parameters.next-round}}/models/R{{workflow.parameters.rounds}}r{{tasks.agg-sol1-00.outputs.parameters.next-round}}_agg.pth"
        withItems:
        - { inst: "1" }
        - { inst: "2" }
        - { inst: "3" }
        - { inst: "4" }
        - { inst: "5" }
        - { inst: "6" }
        dependencies: [agg-sol1-00]

      - name: agg-sol1-01
        template: aggregation-job
        arguments:
          parameters:
          - name: script-name
            value: "run_aggregation.sh"
          - name: round
            value: "{{tasks.agg-sol1-00.outputs.parameters.next-round}}"
          - name: epochs
            value: "019"
          - name: epoch
            value: "{{tasks.agg-sol1-00.outputs.parameters.next-epoch}}"
          - name: inst-id
            value: "0"
          - name: model_pth
            value: "None"
          - name: algorithm
            value: "fedavg"
        dependencies: [train-sol1-01]

      - name: infer-sol1--01
        template: infer-job
        arguments:
          parameters:
          - name: script-name
            value: "run_forward1.sh"
          - name: job-name
            value: "{{item.job-name}}"
          - name: rounds
            value: "{{item.rounds}}"
          - name: round
            value: "{{item.round}}"
          - name: epoch
            value: "{{item.epoch}}"
          - name: inst-id
            value: "{{item.inst}}"
          - name: split_csv
            value: "{{item.split_csv}}"
          - name: model_pth
            value: "{{item.model_pth}}"
        withItems:
        - { job-name: "sol1_test_0", rounds: "02", round: "01", epoch: "020", inst: "0", split_csv: "cc359ppmi128/CC359PPMI128_sol1-test.csv", model_pth: "/fedpod/states/sol1_0/R02r02/models/R02r02_agg.pth" }
        dependencies: [agg-sol1-01]

  - name: train-job
    inputs:
      parameters:
      - name: script-name
      - name: round
      - name: epochs
      - name: epoch
      - name: inst-id
      - name: model_pth
    container:
      image: dwnusa/fedpod:v0.4.17.3
      imagePullPolicy: Always
      command: ["/bin/sh", "-c"]
      args:
        - >
          ./{{inputs.parameters.script-name}} 
          -s 0 
          -f 4
          -m 15
          -g 0 
          -J {{workflow.parameters.job-prefix}}_{{inputs.parameters.inst-id}} 
          -R {{workflow.parameters.rounds}} 
          -r {{inputs.parameters.round}} 
          -E {{inputs.parameters.epochs}} 
          -e {{inputs.parameters.epoch}} 
          -i {{inputs.parameters.inst-id}} 
          -c {{workflow.parameters.split_csv}} 
          -M {{inputs.parameters.model_pth}}
      resources:
        requests:
          cpu: "2"
          memory: "16G"
      volumeMounts:
      - name: cc359ppmi128-volume
        mountPath: /fedpod/cc359ppmi128
      - name: states-volume
        mountPath: /fedpod/states
      - name: logs-volume
        mountPath: /fedpod/logs
      - name: runs-volume
        mountPath: /fedpod/runs
      stdin: true
      tty: true
    volumes:
    - name: cc359ppmi128-volume
      hostPath:
        path: /fedpod/cc359ppmi128  # 로컬 경로
        type: Directory
    - name: states-volume
      hostPath:
        path: /fedpod/states  # 로컬 경로
        type: Directory
    - name: logs-volume
      hostPath:
        path: /fedpod/logs  # 로컬 경로
        type: Directory
    - name: runs-volume
      hostPath:
        path: /fedpod/runs  # 로컬 경로
        type: Directory


  - name: aggregation-job
    inputs:
      parameters:
      - name: script-name
      - name: round
      - name: epochs
      - name: epoch
      - name: algorithm
      - name: inst-id
      - name: model_pth
    container:
      image: dwnusa/fedpod:v0.4.17.3
      imagePullPolicy: Always
      command: ["/bin/sh", "-c"]
      args: 
        - >
          ./{{inputs.parameters.script-name}} 
          -R {{workflow.parameters.rounds}} 
          -r {{inputs.parameters.round}} 
          -E {{inputs.parameters.epochs}} 
          -e {{inputs.parameters.epoch}} 
          -j {{workflow.parameters.job-prefix}} 
          -i {{inputs.parameters.inst-id}} 
          -a {{inputs.parameters.algorithm}} 
          -M {{inputs.parameters.model_pth}}
      resources:
        requests:
          cpu: "2"
          memory: "4G"
      volumeMounts:
      - name: cc359ppmi128-volume
        mountPath: /fedpod/cc359ppmi128
      - name: states-volume
        mountPath: /fedpod/states
      - name: logs-volume
        mountPath: /fedpod/logs
      - name: runs-volume
        mountPath: /fedpod/runs
      stdin: true
      tty: true
    volumes:
    - name: cc359ppmi128-volume
      hostPath:
        path: /fedpod/cc359ppmi128  # 로컬 경로
        type: Directory
    - name: states-volume
      hostPath:
        path: /fedpod/states  # 로컬 경로
        type: Directory
    - name: logs-volume
      hostPath:
        path: /fedpod/logs  # 로컬 경로
        type: Directory
    - name: runs-volume
      hostPath:
        path: /fedpod/runs  # 로컬 경로
        type: Directory
        
  - name: infer-job
    inputs:
      parameters:
      - name: script-name
      - name: job-name
      - name: rounds
      - name: round
      - name: epoch
      - name: inst-id
      - name: split_csv
      - name: model_pth
    container:
      image: dwnusa/fedpod:v0.4.17.3
      imagePullPolicy: Always
      command: ["/bin/sh", "-c"]
      args: 
        - >
          ./{{inputs.parameters.script-name}}
          -s 1
          -g 0
          -J {{inputs.parameters.job-name}}
          -i {{inputs.parameters.inst-id}}
          -R {{inputs.parameters.rounds}}
          -r {{inputs.parameters.round}}
          -e {{inputs.parameters.epoch}}
          -c {{inputs.parameters.split_csv}}
          -M {{inputs.parameters.model_pth}}
          -t test
      resources:
        requests:
          cpu: "2"
          memory: "16G"
      volumeMounts:
      - name: cc359ppmi128-volume
        mountPath: /fedpod/cc359ppmi128
      - name: states-volume
        mountPath: /fedpod/states
      - name: logs-volume
        mountPath: /fedpod/logs
      - name: runs-volume
        mountPath: /fedpod/runs
      stdin: true
      tty: true
    volumes:
    - name: cc359ppmi128-volume
      hostPath:
        path: /fedpod/cc359ppmi128  # 로컬 경로
        type: Directory
    - name: states-volume
      hostPath:
        path: /fedpod/states  # 로컬 경로
        type: Directory
    - name: logs-volume
      hostPath:
        path: /fedpod/logs  # 로컬 경로
        type: Directory
    - name: runs-volume
      hostPath:
        path: /fedpod/runs  # 로컬 경로
        type: Directory